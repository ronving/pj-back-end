plugins {
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "com.netflix.dgs.codegen" version "6.0.2"
    id 'java'
}

group 'ua.com.playjoy'
version '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.hibernate:hibernate-core'

    // Swagger 2.0
//    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Database
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    // JWT

    // Caching
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // Logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // DGS GraphQL Core
    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:4.9.25"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    implementation "com.netflix.graphql.dgs:graphql-dgs-extended-scalars"

    testImplementation "com.netflix.graphql.dgs:graphql-dgs-client"

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
}

bootBuildImage {
    imageName = "pj-back-end"
}

generateJava {
    packageName = 'com.playjoy.api'
    generateClient = true
}

generateJava {
    generateClient = true
    typeMapping = [
            "BigInteger"  : "java.math.BigInteger",
            "BigDecimal": "java.math.BigDecimal",
            "Long": "java.lang.Long",
            "Tag": "com.playjoy.enums.Tag",
            "Category": "com.playjoy.enums.Category"
    ]
}